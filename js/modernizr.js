/*! modernizr 3.6.0 (Custom Build) | MIT *
 * https://modernizr.com/download/?-boxsizing-cssvhunit-cssvwunit-flexbox-rgba-svg-setclasses !*/
!function (e, n, t) { function r(e, n) { return typeof e === n } function o() { var e, n, t, o, s, i, a; for (var l in S) if (S.hasOwnProperty(l)) { if (e = [], n = S[l], n.name && (e.push(n.name.toLowerCase()), n.options && n.options.aliases && n.options.aliases.length)) for (t = 0; t < n.options.aliases.length; t++)e.push(n.options.aliases[t].toLowerCase()); for (o = r(n.fn, "function") ? n.fn() : n.fn, s = 0; s < e.length; s++)i = e[s], a = i.split("."), 1 === a.length ? Modernizr[a[0]] = o : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = o), C.push((o ? "" : "no-") + a.join("-")) } } function s(e) { var n = x.className, t = Modernizr._config.classPrefix || ""; if (_ && (n = n.baseVal), Modernizr._config.enableJSClass) { var r = new RegExp("(^|\\s)" + t + "no-js(\\s|$)"); n = n.replace(r, "$1" + t + "js$2") } Modernizr._config.enableClasses && (n += " " + t + e.join(" " + t), _ ? x.className.baseVal = n : x.className = n) } function i() { return "function" != typeof n.createElement ? n.createElement(arguments[0]) : _ ? n.createElementNS.call(n, "http://www.w3.org/2000/svg", arguments[0]) : n.createElement.apply(n, arguments) } function a(n, t, r) { var o; if ("getComputedStyle" in e) { o = getComputedStyle.call(e, n, t); var s = e.console; if (null !== o) r && (o = o.getPropertyValue(r)); else if (s) { var i = s.error ? "error" : "log"; s[i].call(s, "getComputedStyle returning null, its possible modernizr test results are inaccurate") } } else o = !t && n.currentStyle && n.currentStyle[r]; return o } function l(e, n) { return e - 1 === n || e === n || e + 1 === n } function u() { var e = n.body; return e || (e = i(_ ? "svg" : "body"), e.fake = !0), e } function f(e, t, r, o) { var s, a, l, f, d = "modernizr", c = i("div"), p = u(); if (parseInt(r, 10)) for (; r--;)l = i("div"), l.id = o ? o[r] : d + (r + 1), c.appendChild(l); return s = i("style"), s.type = "text/css", s.id = "s" + d, (p.fake ? p : c).appendChild(s), p.appendChild(c), s.styleSheet ? s.styleSheet.cssText = e : s.appendChild(n.createTextNode(e)), c.id = d, p.fake && (p.style.background = "", p.style.overflow = "hidden", f = x.style.overflow, x.style.overflow = "hidden", x.appendChild(p)), a = t(c, e), p.fake ? (p.parentNode.removeChild(p), x.style.overflow = f, x.offsetHeight) : c.parentNode.removeChild(c), !!a } function d(e, n) { return !!~("" + e).indexOf(n) } function c(e) { return e.replace(/([a-z])-([a-z])/g, function (e, n, t) { return n + t.toUpperCase() }).replace(/^-/, "") } function p(e, n) { return function () { return e.apply(n, arguments) } } function m(e, n, t) { var o; for (var s in e) if (e[s] in n) return t === !1 ? e[s] : (o = n[e[s]], r(o, "function") ? p(o, t || n) : o); return !1 } function g(e) { return e.replace(/([A-Z])/g, function (e, n) { return "-" + n.toLowerCase() }).replace(/^ms-/, "-ms-") } function v(n, r) { var o = n.length; if ("CSS" in e && "supports" in e.CSS) { for (; o--;)if (e.CSS.supports(g(n[o]), r)) return !0; return !1 } if ("CSSSupportsRule" in e) { for (var s = []; o--;)s.push("(" + g(n[o]) + ":" + r + ")"); return s = s.join(" or "), f("@supports (" + s + ") { #modernizr { position: absolute; } }", function (e) { return "absolute" == a(e, null, "position") }) } return t } function h(e, n, o, s) { function a() { u && (delete k.style, delete k.modElem) } if (s = r(s, "undefined") ? !1 : s, !r(o, "undefined")) { var l = v(e, o); if (!r(l, "undefined")) return l } for (var u, f, p, m, g, h = ["modernizr", "tspan", "samp"]; !k.style && h.length;)u = !0, k.modElem = i(h.shift()), k.style = k.modElem.style; for (p = e.length, f = 0; p > f; f++)if (m = e[f], g = k.style[m], d(m, "-") && (m = c(m)), k.style[m] !== t) { if (s || r(o, "undefined")) return a(), "pfx" == n ? m : !0; try { k.style[m] = o } catch (y) { } if (k.style[m] != g) return a(), "pfx" == n ? m : !0 } return a(), !1 } function y(e, n, t, o, s) { var i = e.charAt(0).toUpperCase() + e.slice(1), a = (e + " " + E.join(i + " ") + i).split(" "); return r(n, "string") || r(n, "undefined") ? h(a, n, o, s) : (a = (e + " " + N.join(i + " ") + i).split(" "), m(a, n, t)) } function w(e, n, r) { return y(e, t, t, n, r) } var C = [], S = [], b = { _version: "3.6.0", _config: { classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0 }, _q: [], on: function (e, n) { var t = this; setTimeout(function () { n(t[e]) }, 0) }, addTest: function (e, n, t) { S.push({ name: e, fn: n, options: t }) }, addAsyncTest: function (e) { S.push({ name: null, fn: e }) } }, Modernizr = function () { }; Modernizr.prototype = b, Modernizr = new Modernizr, Modernizr.addTest("svg", !!n.createElementNS && !!n.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect); var x = n.documentElement, _ = "svg" === x.nodeName.toLowerCase(); Modernizr.addTest("rgba", function () { var e = i("a").style; return e.cssText = "background-color:rgba(150,255,150,.5)", ("" + e.backgroundColor).indexOf("rgba") > -1 }); var z = b.testStyles = f; z("#modernizr { height: 50vh; }", function (n) { var t = parseInt(e.innerHeight / 2, 10), r = parseInt(a(n, null, "height"), 10); Modernizr.addTest("cssvhunit", l(r, t)) }), z("#modernizr { width: 50vw; }", function (n) { var t = parseInt(e.innerWidth / 2, 10), r = parseInt(a(n, null, "width"), 10); Modernizr.addTest("cssvwunit", l(r, t)) }); var T = "Moz O ms Webkit", E = b._config.usePrefixes ? T.split(" ") : []; b._cssomPrefixes = E; var N = b._config.usePrefixes ? T.toLowerCase().split(" ") : []; b._domPrefixes = N; var P = { elem: i("modernizr") }; Modernizr._q.push(function () { delete P.elem }); var k = { style: P.elem.style }; Modernizr._q.unshift(function () { delete k.style }), b.testAllProps = y, b.testAllProps = w, Modernizr.addTest("boxsizing", w("boxSizing", "border-box", !0) && (n.documentMode === t || n.documentMode > 7)), Modernizr.addTest("flexbox", w("flexBasis", "1px", !0)), o(), s(C), delete b.addTest, delete b.addAsyncTest; for (var j = 0; j < Modernizr._q.length; j++)Modernizr._q[j](); e.Modernizr = Modernizr }(window, document);